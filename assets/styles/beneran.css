body {
  font-family: sans-serif;
}

h2 {
  color: #00a2c6;
}
h3 {
  color: #00a2c6;
}

footer {
  padding: 20px;
  color: white;
  background-color: #00a2c6;
}

/* 
selector basic terdiri dari :
*Type Selector
*Class Selector
*ID Selector
*Attribute Selector
*Universal Selector


1. ******************semua elemen span********** 
<style>
      span {
        color: red;
    }
  </style>

2. *****************class selector**************
<style>
       .red {
           color: red;
       }
 
       .skyblue-bg {
           background-color: skyblue;
       }
 
       .fancy {
           font-weight: bold;
           text-shadow: 4px 4px 3px #77f;
       }
   </style>

   3.***************ID selector*****************
       <style>
      #special {
          background-color: skyblue;
      }
      </style>

  4.***************Attribute Selector************
    <style>
        <a> element yang menerapkan href attribut 
            a[href] {
              color: blue;
          }

      <a> element yang menerapkan nilai pada href dengan awalan "#" 
          a[href^="#"] {
        background-color: gold;
          }

      <a> element yang menerapkan nilai pada href yang mengandung teks "example" 
          a[href*="example"] {
              background-color: silver;
          }
      <a> element yang menerapkan nilai pada href yang mengandung teks "insensitive"    tidak mementingkan huruf kapital
        a[href*="insensitive" i] {
        color: cyan;
         }

      <a> element yang menerapkan nilai pada href dengan akhiran ".org" 
          a[href$=".org"] {
              color: red;
          }
    </style>


    4. *****************Universal Selector *****************************

    Menargetkan seluruh tipe elemen 
       * {
        color: green;
    }
    
    Menargetkan seluruh tipe elemen yang mengandung nilai "en" pada atribut lang 
    *[lang^=en] {
        font-style: italic;
    }
*/

/* Font styling
font-family : Menetapkan jenis font yang akan diterapkan pada target.
font-size : Menentukan ukuran pada teks.
font-weight : Menentukan ketebalan pada teks. 
font-style : Menetapkan styling yang diterapkan pada teks.
font-variant : Menentukan teks untuk menggunakan gaya small caps (huruf kapital kecil).
font : Shorthand dari properti font yang ada.


*****************font-family**********
**************************************
**************************************
body {
   font-family: sans-serif;
}

**********font-size*******************
h1 {
   font-size: 1.5em;
}


<<<<<<<<<Relativw Unit( Satuan RELATIVE)>>>>>>>>>>>>>>>>>
em
relative to>>>>>>>>>Font size

Satuan relatif terhadap ukuran font yang sedang digunakan pada elemen (contohnya, 2em berarti 2 kali lebih besar dari ukuran font seharusnya).

ex
relative to >>>>>>Font height
Satuan relatif terhadap tinggi font saat ini, satuan ini sangat jarang sekali digunakan

rem
relative to>>>>>>>..Font size

Mirip seperti em, tetapi rem merupakan satuan relatif terhadap ukuran font dari root element.

ch
relative to>>>>>>>>>>Font width
Satuan relatif terhadap lebar dari karakter “0” nol.

vw
relative to>>>>>>>>>>>Viewport width

Satuan relatif terhadap 1% lebar viewport. Contoh 1vw = 1% dari lebar viewport. Satuan ini tidak didukung pada browser IE8 ke bawah.

vh
relative to>>>>>>>>>>Viewport height
Satuan relatif terhadap 1% tinggi viewport. Contoh 1vh = 1% dari tinggi viewport. Satuan ini tidak didukung pada browser IE8 ke bawah.


<<<<<<<<<<<<<<<aBSOLUTE UNIT (SATUAN ABSOLUTE)
body {
   font-size: 16px;
}
h1 {
   font-size: 150%; >>>>>> 150% dari 16 = 24px 
  }


px  >>>>>>>>>>Menetapkan nilai font berdasarkan ukuran pixel
pt>>>>>>>>>>Menetapkan nilai font berdasarkan points (1/72 inch di CSS2.1)
pc>>>>>>>>>>>Menetapkan nilai font berdasarkan picas (1 pica = 12 point)
mm>>>>>>>>>>>Menetapkan nilai font berdasarkan millimeters
cm >>>>>>>>>>Menetapkan nilai font berdasarkan centimeters
in>>>>>>>>>>>>Menetapkan nilai font berdasarkan inches


************FONT-WEIGHT***************
**************************************
**************************************
numeric values (100 sampai 900) atau dengan menggunakan descriptive terms (normal, bold, bolder, dan lighter). 

************FONT-STYLE***************
**************************************
**************************************
(normal) atau miring (italic dan oblique)


************FONT-VARIANT***************
**************************************
**************************************
Kita yang terbiasa dengan aplikasi document editor (rich text) seperti Microsoft Word, tentu tahu atau sudah mencoba fitur small caps. Fitur ini dapat membuat teks menjadi kapital tetapi dituliskan secara kecil dan merapat, seperti ini:


************SHORT HAND***************
**************************************
**************************************

target{
  font:style weight variant size font-family
}

contoh 
p{
  font :1em sans-serif
}


*/

/* 

***************Line Height**********************
Properti line-height digunakan untuk mengatur jarak minimal dari garis dasar ke garis dasar dalam menampilkannya teks pada halaman. Jika kita terbiasa dengan software document editor (rich text) seperti Microsoft Word, properti ini mirip dengan fungsi line and paragraph spacing.

p {
   line-height: 2;
}
p {
   line-height: 200%;
}
p {
   line-height: 2em;
}



***************Text Indent**********************
Dalam membuat sebuah dokumen tidak jarang kita membutuhkan jarak/lekuk di awal paragraf. Hal tersebut dapat dilakukan pada website dengan menerapkan properti text-indent.  Kita dapat menentukan nilai properti ini melalui perhitungan panjang dalam px, em, dan in atau bisa menggunakan nilai persentase (%). Nilai persentase dihitung berdasarkan lebar dari induk elemen. Berikut merupakan contoh penggunaannya:
p#first {
   text-indent: 2em;
}
 
p#second {
   text-indent: 25%;
}
 
p#third {
   text-indent: -35px;
}


***************Text Align**********************
Kita bisa mengatur text alignment (perataan teks) pada website seperti kita melakukannya pada aplikasi Microsoft Word dengan menggunakan properti text-align. Untuk asalnya, properti ini bernilai left atau biasa kita sebut rata kiri. Namun jika kita ingin mengubah perataan teks ini berada di posisi lainnya, maka kita dapat mengubah value-nya menjadi value yang sesuai dengan keinginan kita.

Berikut ini nilai yang dapat digunakan pada properti text-align:
text-align: left
Membuat perataan teks pada ujung kiri

text-align: right
Membuat perataan teks pada ujung kanan

text-align: center
Membuat perataan teks secara menengah

text-align: justify
Membuat perataan teks yang setara pada ujung kiri dan kanannya




***************Text Decoration**********************
Properti ini paling populer digunakan ketika kita ingin membuat garis bawah atau underline pada teks. Tapi tak hanya itu, ada beberapa nilai lain yang dapat kita gunakan untuk properti ini. Detailnya sebagai berikut:
text-decoration: underline
Memberikan garis bawah (underline) pada teks

text-decoration: overline
Memberikan garis atas (overline) pada teks

text-decoration: line-through
Memberikan efek tulisan dicoret (strikethrough)

text-decoration: none
Menghilangkan dekorasi teks yang ada pada elemen

***************Text Transform**********************
Pasti kita pernah mencoba fitur pada document editor yang dapat mengubah kapitalisasi pada teks, bukan? Fitur ini sangat membantu di kala kita ingin mengubah kapitalisasi tanpa harus menuliskan kembali teksnya. Pada CSS juga terdapat fitur serupa, yaitu dengan menggunakan properti text-transform. Ketika kita menerapkan properti text-transform pada elemen teks, maka kapitalisasi akan berubah ketika halaman di-render tanpa harus mengubahnya pada dokumen HTML. 

Properti ini dapat berisikan nilai sebagai berikut:
text-transform: none
Teks yang ditampilkan sama seperti yang dituliskan

text-transform: capitalize
Membuat huruf pertama besar pada tiap katanya

text-transform: lowercase
Membuat seluruh teks menggunakan huruf kecil

Text-transform: uppercase
Membuat seluruh teks menggunakan huruf besar



***************Text Transform**********************
roperti selanjutnya yang bisa kita gunakan untuk formating teks adalah letter-spacing dan word-spacing. Seperti namanya, properti ini digunakan untuk mengatur spasi atau jarak pada teks. Properti letter-spacing digunakan untuk mengatur jarak antar huruf, sedangkan word-spacing digunakan untuk mengatur jarak antar kata. Berikut contohnya:

p#letter {
   letter-spacing: 4px;
}
p#word {
   word-spacing: 1.5em;
}

***************Text shadow**********************
Memberikan bayangan pada teks telah menjadi hal yang umum digunakan meskipun tidak memiliki dukungan di semua browser. Pada CSS untuk membuat bayangan pada teks (atau biasa disebut drop shadow) kita dapat gunakan properti text-shadow.

Nilai dari properti ini cukup rumit karena membutuhkan tiga buah nilai dan satu buah nilai warna sehingga membutuhkan empat nilai dalam satu properti untuk menentukan bayangannya.

Nilai pertama : menunjukkan seberapa jauh ke kiri atau kanan (horizontal) bayangan harus ditampakkan.
Nilai kedua : menunjukkan jarak ke atas atau ke bawah (vertical) bayangan harus ditampakkan. 
Nilai Ketiga (opsional) : menentukan tingkat keburaman yang harus diterapkan pada bayangan.
Nilai Keempat :  menentukan warna yang digunakan pada bayangan.

p#one {
   text-shadow: 1px 1px 0px #000000;
   background-color: #eeeeee;
   color: #666666;
}

*/
